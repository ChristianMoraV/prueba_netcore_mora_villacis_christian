// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POS.Infraestructure.Persistences.Contexts;

#nullable disable

namespace POS.Infraestructure.Persistences.Migrations
{
    [DbContext(typeof(POSCineContext))]
    partial class POSCineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational.Collection", "ModerN_Spanish_CI_AS");

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("POS.Domain.Entities.Pelicula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pelicula");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AuditCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("auditCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int")
                        .HasColumnName("auditCreateUser");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("auditDeleteDate");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int")
                        .HasColumnName("auditDeleteUser");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("auditUpdateDate");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int")
                        .HasColumnName("auditUpdateUser");

                    b.Property<int>("Duracion")
                        .HasColumnType("int")
                        .HasColumnName("duracion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombre");

                    b.Property<int>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("state")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("pelicula", (string)null);
                });

            modelBuilder.Entity("POS.Domain.Entities.PeliculaSala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pelicula_sala");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AuditCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("auditCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int")
                        .HasColumnName("auditCreateUser");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("auditDeleteDate");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int")
                        .HasColumnName("auditDeleteUser");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("auditUpdateDate");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int")
                        .HasColumnName("auditUpdateUser");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_publicacion");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int")
                        .HasColumnName("id_pelicula");

                    b.Property<int>("IdSalaCine")
                        .HasColumnType("int")
                        .HasColumnName("id_sala_cine");

                    b.Property<int>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("state")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.HasIndex("IdPelicula");

                    b.HasIndex("IdSalaCine");

                    b.ToTable("pelicula_sala", (string)null);
                });

            modelBuilder.Entity("POS.Domain.Entities.SalaCine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_sala");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AuditCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("auditCreateDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AuditCreateUser")
                        .HasColumnType("int")
                        .HasColumnName("auditCreateUser");

                    b.Property<DateTime?>("AuditDeleteDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("auditDeleteDate");

                    b.Property<int?>("AuditDeleteUser")
                        .HasColumnType("int")
                        .HasColumnName("auditDeleteUser");

                    b.Property<DateTime?>("AuditUpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("auditUpdateDate");

                    b.Property<int?>("AuditUpdateUser")
                        .HasColumnType("int")
                        .HasColumnName("auditUpdateUser");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombre");

                    b.Property<int>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("state")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.ToTable("sala_cine", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuditCreateDate = new DateTime(2025, 1, 6, 19, 14, 22, 620, DateTimeKind.Local).AddTicks(3926),
                            AuditCreateUser = 1,
                            Estado = "Disponible",
                            Nombre = "Sala 1",
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            AuditCreateDate = new DateTime(2025, 1, 6, 19, 14, 22, 620, DateTimeKind.Local).AddTicks(3937),
                            AuditCreateUser = 1,
                            Estado = "Disponible",
                            Nombre = "Sala 2",
                            State = 1
                        },
                        new
                        {
                            Id = 3,
                            AuditCreateDate = new DateTime(2025, 1, 6, 19, 14, 22, 620, DateTimeKind.Local).AddTicks(3938),
                            AuditCreateUser = 1,
                            Estado = "Disponible",
                            Nombre = "Sala 3",
                            State = 1
                        },
                        new
                        {
                            Id = 4,
                            AuditCreateDate = new DateTime(2025, 1, 6, 19, 14, 22, 620, DateTimeKind.Local).AddTicks(3940),
                            AuditCreateUser = 1,
                            Estado = "Disponible",
                            Nombre = "Sala 4",
                            State = 1
                        },
                        new
                        {
                            Id = 5,
                            AuditCreateDate = new DateTime(2025, 1, 6, 19, 14, 22, 620, DateTimeKind.Local).AddTicks(3940),
                            AuditCreateUser = 1,
                            Estado = "Disponible",
                            Nombre = "Sala 5",
                            State = 1
                        },
                        new
                        {
                            Id = 6,
                            AuditCreateDate = new DateTime(2025, 1, 6, 19, 14, 22, 620, DateTimeKind.Local).AddTicks(3941),
                            AuditCreateUser = 1,
                            Estado = "Disponible",
                            Nombre = "Sala 6",
                            State = 1
                        },
                        new
                        {
                            Id = 7,
                            AuditCreateDate = new DateTime(2025, 1, 6, 19, 14, 22, 620, DateTimeKind.Local).AddTicks(3942),
                            AuditCreateUser = 1,
                            Estado = "Disponible",
                            Nombre = "Sala 7",
                            State = 1
                        });
                });

            modelBuilder.Entity("POS.Domain.Entities.PeliculaSala", b =>
                {
                    b.HasOne("POS.Domain.Entities.Pelicula", "IdPeliculaNavigation")
                        .WithMany("PeliculaSalas")
                        .HasForeignKey("IdPelicula")
                        .IsRequired()
                        .HasConstraintName("FK__pelicula___id_pe__4222D4EF");

                    b.HasOne("POS.Domain.Entities.SalaCine", "IdSalaCineNavigation")
                        .WithMany("PeliculaSalas")
                        .HasForeignKey("IdSalaCine")
                        .IsRequired()
                        .HasConstraintName("FK__pelicula___id_sa__412EB0B6");

                    b.Navigation("IdPeliculaNavigation");

                    b.Navigation("IdSalaCineNavigation");
                });

            modelBuilder.Entity("POS.Domain.Entities.Pelicula", b =>
                {
                    b.Navigation("PeliculaSalas");
                });

            modelBuilder.Entity("POS.Domain.Entities.SalaCine", b =>
                {
                    b.Navigation("PeliculaSalas");
                });
#pragma warning restore 612, 618
        }
    }
}
